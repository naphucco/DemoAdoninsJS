@layout('layouts/app')

@section('content')

<div class="container">
  <h1 class="title">
    Demo
  </h1>
  <p class="subtitle">
  <div class="is-flex">
    <!-- Button to demonstrate calling the grid's API. -->
    <form action="{{ route('/custommers') }}" method="POST">
      <input id="ids" name="ids" hidden>
      <button onclick="deleteCustomers()" class="button is-danger mr-2">Delete Customer</button>
    </form>
    <button onclick="deselect()" class="button is-warning mr-2">Clear selected</button>
    <button onclick="location.href='/create-customer';" class="button is-link">Add
      Customer</button>
  </div>
  <p class="pb-3" />
  <!-- The div that will host the grid. ag-theme-alpine is the theme. -->
  <!-- The gid will be the size that this element is given. -->
  <div id="myGrid" class="ag-theme-alpine" style="height: 500px "></div>
  <script type="text/javascript">
    // Function to demonstrate calling grid's API
       function deselect(){
           gridOptions.api.deselectAll()
       }

       function deleteCustomers(){
        let selectedNodes = gridOptions.api.getSelectedNodes();
            let selectedData = selectedNodes.map(node => node.data.id);
            console.log('all cell was clicked', JSON.stringify(selectedData))
            // set list id to delete
            document.getElementById("ids").value = selectedData;
       }
       // Grid Options are properties passed to the grid
       const gridOptions = {

         // each entry here represents one column
         columnDefs: [
           { field: "name" },
           { field: "user_name" },
           { field: "email" },
           { field: "sex" },
           { field: "age" },
         ],

         // default col def properties get applied to all columns
         defaultColDef: {
          sortable: true, 
          filter: true,
          width: 270,
        },
         rowSelection: 'multiple', // allow rows to be selected
         animateRows: true, // have rows animate to new positions when sorted

         // example event handler
         onCellClicked: params => {
           console.log('cell was clicked', params)
           
         },

         onCellDoubleClicked: params => {
           console.log('cell was clicked 2222', params)
           location.href='/update-customer?customerId=' + params.data.id;
         }
       };

       // get div to host the grid
       const eGridDiv = document.getElementById("myGrid");
       // new grid instance, passing in the hosting DIV and Grid Options
       new agGrid.Grid(eGridDiv, gridOptions);
       gridOptions.api.setRowData({{{customers}}});
       // Fetch data from server
      //  fetch("https://www.ag-grid.com/example-assets/row-data.json")
      //  .then(response => response.json())
      //  .then(data => {
      //    // load fetched data into grid
      //    gridOptions.api.setRowData(data);
      //  });
  </script>

  </p>
</div>

@endsection